{"remainingRequest":"/Users/jeong7331/projects/GooktoWebFront/node_modules/babel-loader/lib/index.js!/Users/jeong7331/projects/GooktoWebFront/node_modules/eslint-loader/index.js??ref--13-0!/Users/jeong7331/projects/GooktoWebFront/src/utils/blob_upload.js","dependencies":[{"path":"/Users/jeong7331/projects/GooktoWebFront/src/utils/blob_upload.js","mtime":1590115017541},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2plb25nNzMzMS9wcm9qZWN0cy9Hb29rdG9XZWJGcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Cgp2YXIgX3JlcXVpcmUgPSByZXF1aXJlKCJAYXp1cmUvaWRlbnRpdHkiKSwKICAgIERlZmF1bHRBenVyZUNyZWRlbnRpYWwgPSBfcmVxdWlyZS5EZWZhdWx0QXp1cmVDcmVkZW50aWFsOwoKdmFyIF9yZXF1aXJlMiA9IHJlcXVpcmUoIkBhenVyZS9zdG9yYWdlLWJsb2IiKSwKICAgIEJsb2JTZXJ2aWNlQ2xpZW50ID0gX3JlcXVpcmUyLkJsb2JTZXJ2aWNlQ2xpZW50OwoKdmFyIGFjY291bnQgPSAic2ltaW5vdXRkYiI7CnZhciBkZWZhdWx0QXp1cmVDcmVkZW50aWFsID0gbmV3IERlZmF1bHRBenVyZUNyZWRlbnRpYWwoKTsKdmFyIGJsb2JTZXJ2aWNlQ2xpZW50ID0gbmV3IEJsb2JTZXJ2aWNlQ2xpZW50KCJodHRwczovLyIuY29uY2F0KGFjY291bnQsICIuYmxvYi5jb3JlLndpbmRvd3MubmV0IiksIGRlZmF1bHRBenVyZUNyZWRlbnRpYWwpOwp2YXIgY29udGFpbmVyTmFtZSA9ICJpbnB1dGRiIjsKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYmxvYlVwbG9hZCgpIHsKICByZXR1cm4gX2Jsb2JVcGxvYWQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZnVuY3Rpb24gX2Jsb2JVcGxvYWQoKSB7CiAgX2Jsb2JVcGxvYWQgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAvKiNfX1BVUkVfXyovCiAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgIHZhciBjb250YWluZXJDbGllbnQsIGNvbnRlbnQsIGJsb2JOYW1lLCBibG9ja0Jsb2JDbGllbnQsIHVwbG9hZEJsb2JSZXNwb25zZTsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgY29udGFpbmVyQ2xpZW50ID0gYmxvYlNlcnZpY2VDbGllbnQuZ2V0Q29udGFpbmVyQ2xpZW50KGNvbnRhaW5lck5hbWUpOwogICAgICAgICAgICBjb250ZW50ID0gIkhlbGxvIHdvcmxkISI7CiAgICAgICAgICAgIGJsb2JOYW1lID0gIm5ld2Jsb2IiICsgbmV3IERhdGUoKS5nZXRUaW1lKCk7CiAgICAgICAgICAgIGJsb2NrQmxvYkNsaWVudCA9IGNvbnRhaW5lckNsaWVudC5nZXRCbG9ja0Jsb2JDbGllbnQoYmxvYk5hbWUpOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgcmV0dXJuIGJsb2NrQmxvYkNsaWVudC51cGxvYWQoY29udGVudCwgY29udGVudC5sZW5ndGgpOwoKICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgdXBsb2FkQmxvYlJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgY29uc29sZS5sb2coIlVwbG9hZCBibG9jayBibG9iICIuY29uY2F0KGJsb2JOYW1lLCAiIHN1Y2Nlc3NmdWxseSIpLCB1cGxvYWRCbG9iUmVzcG9uc2UucmVxdWVzdElkKTsKCiAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSk7CiAgfSkpOwogIHJldHVybiBfYmxvYlVwbG9hZC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9"},{"version":3,"sources":["/Users/jeong7331/projects/GooktoWebFront/src/utils/blob_upload.js"],"names":["require","DefaultAzureCredential","BlobServiceClient","account","defaultAzureCredential","blobServiceClient","containerName","blobUpload","containerClient","getContainerClient","content","blobName","Date","getTime","blockBlobClient","getBlockBlobClient","upload","length","uploadBlobResponse","console","log","requestId"],"mappings":";;;eAAmCA,OAAO,CAAC,iBAAD,C;IAAlCC,sB,YAAAA,sB;;gBACsBD,OAAO,CAAC,qBAAD,C;IAA7BE,iB,aAAAA,iB;;AAER,IAAMC,OAAO,GAAG,YAAhB;AACA,IAAMC,sBAAsB,GAAG,IAAIH,sBAAJ,EAA/B;AAEA,IAAMI,iBAAiB,GAAG,IAAIH,iBAAJ,mBACbC,OADa,6BAExBC,sBAFwB,CAA1B;AAKA,IAAME,aAAa,GAAG,SAAtB;AAEA,wBAA8BC,UAA9B;AAAA;AAAA;;;;;0BAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,YAAAA,eADO,GACWH,iBAAiB,CAACI,kBAAlB,CAAqCH,aAArC,CADX;AAGPI,YAAAA,OAHO,GAGG,cAHH;AAIPC,YAAAA,QAJO,GAII,YAAY,IAAIC,IAAJ,GAAWC,OAAX,EAJhB;AAKPC,YAAAA,eALO,GAKWN,eAAe,CAACO,kBAAhB,CAAmCJ,QAAnC,CALX;AAAA;AAAA,mBAMoBG,eAAe,CAACE,MAAhB,CAC/BN,OAD+B,EAE/BA,OAAO,CAACO,MAFuB,CANpB;;AAAA;AAMPC,YAAAA,kBANO;AAUbC,YAAAA,OAAO,CAACC,GAAR,6BACuBT,QADvB,oBAEEO,kBAAkB,CAACG,SAFrB;;AAVa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["const { DefaultAzureCredential } = require(\"@azure/identity\");\nconst { BlobServiceClient } = require(\"@azure/storage-blob\");\n\nconst account = \"siminoutdb\";\nconst defaultAzureCredential = new DefaultAzureCredential();\n\nconst blobServiceClient = new BlobServiceClient(\n  `https://${account}.blob.core.windows.net`,\n  defaultAzureCredential\n);\n\nconst containerName = \"inputdb\";\n\nexport default async function blobUpload() {\n  const containerClient = blobServiceClient.getContainerClient(containerName);\n\n  const content = \"Hello world!\";\n  const blobName = \"newblob\" + new Date().getTime();\n  const blockBlobClient = containerClient.getBlockBlobClient(blobName);\n  const uploadBlobResponse = await blockBlobClient.upload(\n    content,\n    content.length\n  );\n  console.log(\n    `Upload block blob ${blobName} successfully`,\n    uploadBlobResponse.requestId\n  );\n}\n"]}]}