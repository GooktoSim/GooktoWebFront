{"remainingRequest":"/Users/jeong7331/projects/GooktoWebFront/node_modules/babel-loader/lib/index.js!/Users/jeong7331/projects/GooktoWebFront/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/jeong7331/projects/GooktoWebFront/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jeong7331/projects/GooktoWebFront/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jeong7331/projects/GooktoWebFront/src/components/NetworkParser.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jeong7331/projects/GooktoWebFront/src/components/NetworkParser.vue","mtime":1590112543714},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFNpbXVsYXRpb25QYW5lbCBmcm9tICcuL1NpbXVsYXRpb25QYW5lbC52dWUnOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ05ldHdvcmtQYXJzZXInLAogIGNvbXBvbmVudHM6IHsKICAgIFNpbXVsYXRpb25QYW5lbDogU2ltdWxhdGlvblBhbmVsCiAgfSwKICBtZXRob2RzOiB7CiAgICBoYW5kbGVGaWxlVXBsb2FkOiBmdW5jdGlvbiBoYW5kbGVGaWxlVXBsb2FkKCkgewogICAgICB0aGlzLmZpbGUgPSB0aGlzLiRyZWZzLmZpbGUuZmlsZXNbMF07CiAgICB9LAogICAgc3VibWl0RmlsZTogZnVuY3Rpb24gc3VibWl0RmlsZSgpIHsKICAgICAgaWYgKHRoaXMuZmlsZSkgewogICAgICAgIGNvbnNvbGUubG9nKCJmb3VuZCBmaWxlIik7CiAgICAgICAgdmFyIGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7IC8vIG9iamVjdCBvZiBrZXkgdmFsdWUgcGFpcgoKICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ2ZpbGUnLCB0aGlzLmZpbGUpOyAvL2ZpbGUgZm9ybWF0IGNvbmZpZ3VyYXRpb25zIGNhbiBiZSBtYWRlIGhlcmUKCiAgICAgICAgdmFyIGF4aW9zQ29uZmlnID0gewogICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ3RleHQvcGxhaW4nLAogICAgICAgICAgICAnQWNjZXB0JzogJyonLAogICAgICAgICAgICAiQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luIjogIioiLAogICAgICAgICAgICAnQWNjZXNzLUNvbnRyb2wtQWxsb3ctTWV0aG9kcyc6ICdHRVQsIFBPU1QsIFBBVENILCBQVVQsIERFTEVURSwgT1BUSU9OUycsCiAgICAgICAgICAgICJBY2Nlc3MtQ29udHJvbC1BbGxvdy1IZWFkZXJzIjogIk9yaWdpbiwgQ29udGVudC1UeXBlLCB4LW1zLSoiLAogICAgICAgICAgICAiQWNjZXNzLUNvbnRyb2wtQWxsb3ctQ3JlZGVudGlhbHMiOiB0cnVlCiAgICAgICAgICB9CiAgICAgICAgfTsKICAgICAgICAvKgogICAgICAgICAgICBNYWtlIHRoZSByZXF1ZXN0IHRvIHRoZSBQT1NUIC9zaW5nbGUtZmlsZSBVUkwKICAgICAgICAqLwogICAgICAgIC8vIGh0dHBzOi8vc2ltaW5vdXRkYi5ibG9iLmNvcmUud2luZG93cy5uZXQvaW5wdXRkYgoKICAgICAgICBheGlvcy5wdXQoJ2h0dHBzOi8vc2ltaW5vdXRkYi5ibG9iLmNvcmUud2luZG93cy5uZXQvaW5wdXRkYicsIGZvcm1EYXRhLCBheGlvc0NvbmZpZykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCJTdWNjZXNzISIpOwogICAgICAgICAgY29uc29sZS5sb2coewogICAgICAgICAgICByZXNwb25zZTogcmVzcG9uc2UKICAgICAgICAgIH0pOwogICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgY29uc29sZS5sb2coewogICAgICAgICAgICBlcnJvcjogZXJyb3IKICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIGNvbnNvbGUubG9nKCJ0aGVyZSBhcmUgbm8gZmlsZXMuIik7CiAgICAgIH0KICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmaWxlOiAnJwogICAgfTsKICB9Cn07"},{"version":3,"sources":["NetworkParser.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,OAAA,eAAA,MAAA,uBAAA;AACA,OAAA,KAAA,MAAA,OAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,eAAA,EAAA;AADA,GAFA;AAKA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,8BACA;AACA,WAAA,IAAA,GAAA,KAAA,KAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,KAHA;AAIA,IAAA,UAJA,wBAIA;AACA,UAAA,KAAA,IAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,YAAA;AAEA,YAAA,QAAA,GAAA,IAAA,QAAA,EAAA,CAHA,CAIA;;AACA,QAAA,QAAA,CAAA,MAAA,CAAA,MAAA,EAAA,KAAA,IAAA,EALA,CAQA;;AACA,YAAA,WAAA,GAAA;AACA,UAAA,OAAA,EAAA;AACA,4BAAA,YADA;AAEA,sBAAA,GAFA;AAGA,2CAAA,GAHA;AAIA,4CAAA,wCAJA;AAKA,4CAAA,8BALA;AAMA,gDAAA;AANA;AADA,SAAA;AAWA;;;AAIA;;AACA,QAAA,KAAA,CAAA,GAAA,CAAA,kDAAA,EACA,QADA,EACA,WADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,UAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA;AAAA,YAAA,QAAA,EAAA;AAAA,WAAA;AACA,SALA,EAMA,KANA,CAMA,UAAA,KAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA;AAAA,YAAA,KAAA,EAAA;AAAA,WAAA;AACA,SARA;AASA,OAlCA,MAkCA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,qBAAA;AACA;AACA;AA1CA,GALA;AAiDA,EAAA,IAjDA,kBAiDA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AADA,KAAA;AAGA;AArDA,CAAA","sourcesContent":["<template>\n    <v-card\n        class=\"pa-2\"\n        tile\n        shaped\n        style=\"height: 650px; background-color:#F0F8FF;\"\n    >\n    <v-card-title\n    class=\"headline\">\n        Network Input Parser  \n    </v-card-title>\n    <v-file-input show-size label=\"Choose Network File\"></v-file-input>\n\n\n    <div class=\"container\">\n        <div class=\"large-12 medium-12 small-12 cell\">\n        <label>File\n            <input type=\"file\" id=\"file\" ref=\"file\" v-on:change=\"handleFileUpload()\"/>\n        </label>\n            <button v-on:click=\"submitFile()\">Submit</button>\n        </div>\n    </div>\n\n    <simulation-panel/>\n    </v-card>\n</template>\n\n\n<script>\nimport SimulationPanel from './SimulationPanel.vue'\nimport axios from 'axios'\n\nexport default {\n    name: 'NetworkParser',\n    components: {\n        SimulationPanel\n    },\n    methods : {\n        handleFileUpload() {\n            this.file = this.$refs.file.files[0];\n        },\n        submitFile() {\n            if (this.file) {\n                console.log(\"found file\");\n\n                let formData = new FormData();\n                // object of key value pair\n                formData.append('file', this.file);\n\n\n                //file format configurations can be made here\n                let axiosConfig = {\n                    headers: {\n                        'Content-Type': 'text/plain',\n                        'Accept': '*',\n                        \"Access-Control-Allow-Origin\" : \"*\",\n                        'Access-Control-Allow-Methods': 'GET, POST, PATCH, PUT, DELETE, OPTIONS',\n                        \"Access-Control-Allow-Headers\": \"Origin, Content-Type, x-ms-*\",\n                        \"Access-Control-Allow-Credentials\" : true\n                    }\n                };\n\n                /*\n                    Make the request to the POST /single-file URL\n                */\n\n                // https://siminoutdb.blob.core.windows.net/inputdb\n                axios.put( 'https://siminoutdb.blob.core.windows.net/inputdb',\n                    formData, axiosConfig\n                ).then(response => {\n                    console.log(\"Success!\");\n                    console.log({ response });\n                }\n                ).catch(error => {\n                    console.log({ error });\n                });\n            } else {\n                console.log(\"there are no files.\");\n            }\n        }\n    },\n    data() {\n        return {\n            file : ''\n        }\n    }\n}\n</script>"],"sourceRoot":"src/components"}]}