{"remainingRequest":"/Users/jeong7331/projects/GooktoWebFront/node_modules/babel-loader/lib/index.js!/Users/jeong7331/projects/GooktoWebFront/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/jeong7331/projects/GooktoWebFront/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jeong7331/projects/GooktoWebFront/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jeong7331/projects/GooktoWebFront/src/components/NetworkParser.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jeong7331/projects/GooktoWebFront/src/components/NetworkParser.vue","mtime":1590511728239},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KdmFyIF9yZXF1aXJlID0gcmVxdWlyZSgiQGF6dXJlL3N0b3JhZ2UtYmxvYiIpLAogICAgQmxvYlNlcnZpY2VDbGllbnQgPSBfcmVxdWlyZS5CbG9iU2VydmljZUNsaWVudDsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnTmV0d29ya1BhcnNlcicsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHN0cnVjdHVyZUZpbGU6ICcnLAogICAgICB2aXJ0dWFsTmV0d29ya0ZpbGU6ICcnLAogICAgICByZXFOYW1lOiAnJywKICAgICAgcmVxVGltZTogJycKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBoYW5kbGVGaWxlVXBsb2FkMTogZnVuY3Rpb24gaGFuZGxlRmlsZVVwbG9hZDEoZmlsZSkgewogICAgICAvLyBGaWxlIEhhbmRsaW5nIGZvciBOZXR3b3JrIFN0cnVjdHVyZSBGaWxlCiAgICAgIHRoaXMuc3RydWN0dXJlRmlsZSA9IGZpbGU7CiAgICAgIGNvbnNvbGUubG9nKGZpbGUpOwogICAgfSwKICAgIGhhbmRsZUZpbGVVcGxvYWQyOiBmdW5jdGlvbiBoYW5kbGVGaWxlVXBsb2FkMihmaWxlKSB7CiAgICAgIC8vIEZpbGUgSGFuZGxpbmcgZm9yIFZpcnR1YWwgTmV0d29yayBGaWxlCiAgICAgIHRoaXMudmlydHVhbE5ldHdvcmtGaWxlID0gZmlsZTsKICAgICAgY29uc29sZS5sb2coZmlsZSk7CiAgICB9LAogICAgc2V0UmVxTmFtZTogZnVuY3Rpb24gc2V0UmVxTmFtZSh0ZXh0KSB7CiAgICAgIHRoaXMucmVxTmFtZSA9IHRleHQ7CiAgICAgIGNvbnNvbGUubG9nKHRleHQpOwogICAgfSwKICAgIHNldFJlcVRpbWU6IGZ1bmN0aW9uIHNldFJlcVRpbWUodGltZSkgewogICAgICB0aGlzLnJlcVRpbWUgPSB0aW1lOwogICAgICBjb25zb2xlLmxvZyh0aW1lKTsKICAgIH0sCiAgICBzdWJtaXRGaWxlOiBmdW5jdGlvbiBzdWJtaXRGaWxlKCkgewogICAgICBpZiAodGhpcy5zdHJ1Y3R1cmVGaWxlICYmIHRoaXMudmlydHVhbE5ldHdvcmtGaWxlKSB7CiAgICAgICAgY29uc29sZS5sb2coImZvdW5kIGZpbGUiKTsKICAgICAgICB2YXIgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTsgLy8gb2JqZWN0IG9mIGtleSB2YWx1ZSBwYWlyCgogICAgICAgIGZvcm1EYXRhLmFwcGVuZCgnZmlsZScsIHRoaXMuc3RydWN0dXJlRmlsZSk7CiAgICAgICAgLyoKICAgICAgICAgICAgTWFrZSB0aGUgcmVxdWVzdCB0byB0aGUgUE9TVCAvc2luZ2xlLWZpbGUgVVJMCiAgICAgICAgKi8KICAgICAgICAvLyBFbnRlciB5b3VyIHN0b3JhZ2UgYWNjb3VudCBuYW1lIGFuZCBzaGFyZWQga2V5CgogICAgICAgIHZhciBhY2NvdW50ID0gInNpbWlub3V0ZGIiOwogICAgICAgIHZhciBzYXMgPSAic2U9MjAyMS0wNS0yMSZzcD1yd2RsYWMmc3Y9MjAxOC0wMy0yOCZzcz1iJnNydD1zY28mc2lnPVlwQW1QbDklMkJKRVpzVEFlY2FtYklsNFVZU3dRcUk5aGFBLzNMRlF5eVF6byUzRCI7CiAgICAgICAgdmFyIGJsb2JTZXJ2aWNlQ2xpZW50ID0gbmV3IEJsb2JTZXJ2aWNlQ2xpZW50KCJodHRwczovLyIuY29uY2F0KGFjY291bnQsICIuYmxvYi5jb3JlLndpbmRvd3MubmV0PyIpLmNvbmNhdChzYXMpKTsKICAgICAgICB2YXIgY29udGFpbmVyQ2xpZW50ID0gYmxvYlNlcnZpY2VDbGllbnQuZ2V0Q29udGFpbmVyQ2xpZW50KCdpbnB1dGRiJyk7CiAgICAgICAgdmFyIGNvbnRlbnQgPSAiSGVsbG8gd29ybGQhIjsKICAgICAgICB2YXIgYmxvYk5hbWUgPSB0aGlzLnJlcU5hbWUgKyBuZXcgRGF0ZSgpLmdldFRpbWUoKTsKICAgICAgICB2YXIgYmxvY2tCbG9iQ2xpZW50ID0gY29udGFpbmVyQ2xpZW50LmdldEJsb2NrQmxvYkNsaWVudChibG9iTmFtZSk7CiAgICAgICAgYmxvY2tCbG9iQ2xpZW50LnVwbG9hZCh0aGlzLnN0cnVjdHVyZUZpbGUsIGNvbnRlbnQubGVuZ3RoKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBjb25zb2xlLmxvZygidGhlcmUgYXJlIG5vIGZpbGVzLiIpOwogICAgICB9CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["NetworkParser.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eA+GA,OAAA,CAAA,qBAAA,C;IAAA,iB,YAAA,iB;;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,aAAA,EAAA,EADA;AAEA,MAAA,kBAAA,EAAA,EAFA;AAGA,MAAA,OAAA,EAAA,EAHA;AAIA,MAAA,OAAA,EAAA;AAJA,KAAA;AAMA,GAVA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,iBADA,6BACA,IADA,EACA;AAAA;AACA,WAAA,aAAA,GAAA,IAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA;AACA,KAJA;AAMA,IAAA,iBANA,6BAMA,IANA,EAMA;AAAA;AACA,WAAA,kBAAA,GAAA,IAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA;AACA,KATA;AAUA,IAAA,UAVA,sBAUA,IAVA,EAUA;AACA,WAAA,OAAA,GAAA,IAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA;AACA,KAbA;AAcA,IAAA,UAdA,sBAcA,IAdA,EAcA;AACA,WAAA,OAAA,GAAA,IAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA;AACA,KAjBA;AAmBA,IAAA,UAnBA,wBAmBA;AACA,UAAA,KAAA,aAAA,IAAA,KAAA,kBAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,YAAA;AAEA,YAAA,QAAA,GAAA,IAAA,QAAA,EAAA,CAHA,CAIA;;AACA,QAAA,QAAA,CAAA,MAAA,CAAA,MAAA,EAAA,KAAA,aAAA;AAGA;;;AAIA;;AACA,YAAA,OAAA,GAAA,YAAA;AACA,YAAA,GAAA,GAAA,yGAAA;AAEA,YAAA,iBAAA,GAAA,IAAA,iBAAA,mBACA,OADA,oCACA,GADA,EAAA;AAIA,YAAA,eAAA,GAAA,iBAAA,CAAA,kBAAA,CAAA,SAAA,CAAA;AAEA,YAAA,OAAA,GAAA,cAAA;AACA,YAAA,QAAA,GAAA,KAAA,OAAA,GAAA,IAAA,IAAA,GAAA,OAAA,EAAA;AACA,YAAA,eAAA,GAAA,eAAA,CAAA,kBAAA,CAAA,QAAA,CAAA;AACA,QAAA,eAAA,CAAA,MAAA,CAAA,KAAA,aAAA,EAAA,OAAA,CAAA,MAAA;AACA,OA1BA,MA0BA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,qBAAA;AACA;AACA;AAjDA;AAZA,CAAA","sourcesContent":["<template>\n    <v-card\n        class=\"pa-2\"\n        tile\n        shaped\n        style=\"height: 650px; background-color:#F0F8FF; text-align:center;\"\n    >\n    <v-card-title\n    class=\"headline\" style=\"display: inline-block;\">\n        Network Input Parser\n    </v-card-title>\n    <!-- <v-file-input show-size label=\"Choose Network File\"></v-file-input> -->\n\n    <div class=\"container input_params\">\n        <div style=\"font-size:20px\"> Parameters </div>\n        <v-text-field\n            label=\"Request Name\"\n            v-on:change=\"setReqName($event)\"\n        ></v-text-field>\n        <v-text-field\n            label=\"Request Time\"\n            v-on:change=\"setReqTime($event)\"\n        ></v-text-field>\n    </div>\n\n\n    <div class=\"container\" style=\"font-size:20px\">\n        Network Structure XML\n        <div class=\"large-12 medium-12 small-12 cell file_upload\" style=\"font-size:14px; padding: 5px;\">\n            <!-- <label for=\"file1\" ><span>Choose a file&hellip;</span></label> -->\n            <v-file-input\n                \n                color=\"deep-purple accent-4\"\n                counter\n                label=\"Network Structure File\"\n                placeholder=\"Select your file\"\n                prepend-icon=\"mdi-paperclip\"\n                outlined\n                v-on:change=\"handleFileUpload1($event)\"\n                :show-size=\"1000\"\n            >\n                <template v-slot:selection=\"{ index, text }\">\n                    <v-chip\n                        v-if=\"index < 2\"\n                        color=\"deep-blue accent-4\"\n                        dark\n                        label\n                        small\n                    >\n                        {{ text }}\n                    </v-chip>\n\n                    <!-- Display File Size-->\n                    <span\n                        v-else-if=\"index === 2\"\n                        class=\"overline grey--text text--darken-3 mx-2\"\n                    >\n                        +{{ file.length - 2 }} File(s)\n                    </span>\n                </template>\n            </v-file-input>\n        </div>\n    </div>\n\n     <div class=\"container\" style=\"font-size:20px\">\n        Virtual Network XML\n        <div class=\"large-12 medium-12 small-12 cell file_upload\" style=\"font-size:14px; padding:2px\">\n            <v-file-input\n                \n                color=\"deep-purple accent-4\"\n                counter\n                label=\"Virtual Network File\"\n                placeholder=\"Select your file\"\n                prepend-icon=\"mdi-paperclip\"\n                outlined\n                v-on:change=\"handleFileUpload2($event)\"\n                :show-size=\"1000\"\n            >\n                <template v-slot:selection=\"{ index, text }\">\n                    <v-chip\n                        v-if=\"index < 2\"\n                        color=\"deep-blue accent-4\"\n                        dark\n                        label\n                        small\n                    >\n                        {{ text }}\n                    </v-chip>\n\n                    <!-- Display File Size-->\n                    <span\n                        v-else-if=\"index === 2\"\n                        class=\"overline grey--text text--darken-3 mx-2\"\n                    >\n                        +{{ file.length - 2 }} File(s)\n                    </span>\n                </template>\n            </v-file-input>\n        </div>\n    </div>\n\n\n    <button class='network_form' v-on:click=\"submitFile()\">Submit</button>\n\n\n    <!-- <simulation-panel/> -->\n    </v-card>\n</template>\n\n\n<script>\nconst { BlobServiceClient } = require(\"@azure/storage-blob\");\n\nexport default {\n    name: 'NetworkParser',\n\n    data() {\n        return {\n            structureFile : '',\n            virtualNetworkFile: '',\n            reqName: '',\n            reqTime: ''\n        }\n    },\n\n    methods : {\n        handleFileUpload1(file) { // File Handling for Network Structure File\n            this.structureFile = file;\n            console.log(file);\n        },\n\n        handleFileUpload2(file) { // File Handling for Virtual Network File\n            this.virtualNetworkFile = file;\n            console.log(file);\n        },\n        setReqName(text) {\n            this.reqName = text;\n            console.log(text);\n        },\n        setReqTime(time){\n            this.reqTime = time;\n            console.log(time);\n        },\n\n        submitFile() {\n            if (this.structureFile && this.virtualNetworkFile) {\n                console.log(\"found file\");\n\n                let formData = new FormData();\n                // object of key value pair\n                formData.append('file', this.structureFile);\n\n\n                /*\n                    Make the request to the POST /single-file URL\n                */\n\n                // Enter your storage account name and shared key\n                const account = \"siminoutdb\";\n                const sas = \"se=2021-05-21&sp=rwdlac&sv=2018-03-28&ss=b&srt=sco&sig=YpAmPl9%2BJEZsTAecambIl4UYSwQqI9haA/3LFQyyQzo%3D\";\n                \n                const blobServiceClient = new BlobServiceClient(\n                    `https://${account}.blob.core.windows.net?${sas}`\n                );\n\n                const containerClient = blobServiceClient.getContainerClient('inputdb');\n\n                const content = \"Hello world!\";\n                const blobName = this.reqName + new Date().getTime();\n                const blockBlobClient = containerClient.getBlockBlobClient(blobName);\n                blockBlobClient.upload(this.structureFile, content.length);\n            } else {\n                console.log(\"there are no files.\");\n            }\n        }\n    },\n}\n</script>"],"sourceRoot":"src/components"}]}