<<<<<<< HEAD
{"remainingRequest":"/Users/jeong7331/projects/GooktoWebFront/node_modules/babel-loader/lib/index.js!/Users/jeong7331/projects/GooktoWebFront/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/jeong7331/projects/GooktoWebFront/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jeong7331/projects/GooktoWebFront/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jeong7331/projects/GooktoWebFront/src/components/NetworkParser.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jeong7331/projects/GooktoWebFront/src/components/NetworkParser.vue","mtime":1590507499346},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwp2YXIgX3JlcXVpcmUgPSByZXF1aXJlKCJAYXp1cmUvc3RvcmFnZS1ibG9iIiksCiAgICBCbG9iU2VydmljZUNsaWVudCA9IF9yZXF1aXJlLkJsb2JTZXJ2aWNlQ2xpZW50OwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdOZXR3b3JrUGFyc2VyJywKICBtZXRob2RzOiB7CiAgICBoYW5kbGVGaWxlVXBsb2FkMTogZnVuY3Rpb24gaGFuZGxlRmlsZVVwbG9hZDEoKSB7CiAgICAgIC8vIEZpbGUgSGFuZGxpbmcgZm9yIE5ldHdvcmsgU3RydWN0dXJlIEZpbGUKICAgICAgdGhpcy5zdHJ1Y3R1cmVGaWxlID0gdGhpcy4kcmVmcy5maWxlMS5maWxlc1swXTsKICAgICAgdmFyIGZpbGVOYW1lID0gdGhpcy4kcmVmcy5maWxlMS5maWxlc1swXS5uYW1lOwogICAgICBjb25zb2xlLmxvZyhmaWxlTmFtZSk7CiAgICB9LAogICAgaGFuZGxlRmlsZVVwbG9hZDI6IGZ1bmN0aW9uIGhhbmRsZUZpbGVVcGxvYWQyKCkgewogICAgICAvLyBGaWxlIEhhbmRsaW5nIGZvciBWaXJ0dWFsIE5ldHdvcmsgRmlsZQogICAgICB0aGlzLnZpcnR1YWxOZXR3b3JrRmlsZSA9IHRoaXMuJHJlZnMuZmlsZTIuZmlsZXNbMF07CiAgICAgIGNvbnNvbGUubG9nKHRoaXMuJHJlZnMuZmlsZTIuZmlsZXMubGVuZ3RoKTsKICAgIH0sCiAgICBzdWJtaXRGaWxlOiBmdW5jdGlvbiBzdWJtaXRGaWxlKCkgewogICAgICBpZiAodGhpcy5zdHJ1Y3R1cmVGaWxlKSB7CiAgICAgICAgY29uc29sZS5sb2coImZvdW5kIGZpbGUiKTsKICAgICAgICB2YXIgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTsgLy8gb2JqZWN0IG9mIGtleSB2YWx1ZSBwYWlyCgogICAgICAgIGZvcm1EYXRhLmFwcGVuZCgnZmlsZScsIHRoaXMuc3RydWN0dXJlRmlsZSk7CiAgICAgICAgLyoKICAgICAgICAgICAgTWFrZSB0aGUgcmVxdWVzdCB0byB0aGUgUE9TVCAvc2luZ2xlLWZpbGUgVVJMCiAgICAgICAgKi8KICAgICAgICAvLyBFbnRlciB5b3VyIHN0b3JhZ2UgYWNjb3VudCBuYW1lIGFuZCBzaGFyZWQga2V5CgogICAgICAgIHZhciBhY2NvdW50ID0gInNpbWlub3V0ZGIiOwogICAgICAgIHZhciBzYXMgPSAic2U9MjAyMS0wNS0yMSZzcD1yd2RsYWMmc3Y9MjAxOC0wMy0yOCZzcz1iJnNydD1zY28mc2lnPVlwQW1QbDklMkJKRVpzVEFlY2FtYklsNFVZU3dRcUk5aGFBLzNMRlF5eVF6byUzRCI7CiAgICAgICAgdmFyIGJsb2JTZXJ2aWNlQ2xpZW50ID0gbmV3IEJsb2JTZXJ2aWNlQ2xpZW50KCJodHRwczovLyIuY29uY2F0KGFjY291bnQsICIuYmxvYi5jb3JlLndpbmRvd3MubmV0PyIpLmNvbmNhdChzYXMpKTsKICAgICAgICB2YXIgY29udGFpbmVyQ2xpZW50ID0gYmxvYlNlcnZpY2VDbGllbnQuZ2V0Q29udGFpbmVyQ2xpZW50KCdpbnB1dGRiJyk7CiAgICAgICAgdmFyIGNvbnRlbnQgPSAiSGVsbG8gd29ybGQhIjsKICAgICAgICB2YXIgYmxvYk5hbWUgPSAibmV0d29ya2ZpbGUiICsgbmV3IERhdGUoKS5nZXRUaW1lKCk7CiAgICAgICAgdmFyIGJsb2NrQmxvYkNsaWVudCA9IGNvbnRhaW5lckNsaWVudC5nZXRCbG9ja0Jsb2JDbGllbnQoYmxvYk5hbWUpOwogICAgICAgIGJsb2NrQmxvYkNsaWVudC51cGxvYWQodGhpcy5zdHJ1Y3R1cmVGaWxlLCBjb250ZW50Lmxlbmd0aCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgY29uc29sZS5sb2coInRoZXJlIGFyZSBubyBmaWxlcy4iKTsKICAgICAgfQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHN0cnVjdHVyZUZpbGU6ICcnLAogICAgICB2aXJ0dWFsTmV0d29ya0ZpbGU6ICcnLAogICAgICByZXFOYW1lOiAnJywKICAgICAgcmVxVGltZTogJycKICAgIH07CiAgfQp9Ow=="},{"version":3,"sources":["NetworkParser.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAgDA,OAAA,CAAA,qBAAA,C;IAAA,iB,YAAA,iB;;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAGA,EAAA,OAAA,EAAA;AACA,IAAA,iBADA,+BACA;AAAA;AACA,WAAA,aAAA,GAAA,KAAA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,UAAA,QAAA,GAAA,KAAA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA,EAAA,IAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AAEA,KANA;AAQA,IAAA,iBARA,+BAQA;AAAA;AACA,WAAA,kBAAA,GAAA,KAAA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA,MAAA;AACA,KAXA;AAaA,IAAA,UAbA,wBAaA;AACA,UAAA,KAAA,aAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,YAAA;AAEA,YAAA,QAAA,GAAA,IAAA,QAAA,EAAA,CAHA,CAIA;;AACA,QAAA,QAAA,CAAA,MAAA,CAAA,MAAA,EAAA,KAAA,aAAA;AAGA;;;AAIA;;AACA,YAAA,OAAA,GAAA,YAAA;AACA,YAAA,GAAA,GAAA,yGAAA;AAEA,YAAA,iBAAA,GAAA,IAAA,iBAAA,mBACA,OADA,oCACA,GADA,EAAA;AAIA,YAAA,eAAA,GAAA,iBAAA,CAAA,kBAAA,CAAA,SAAA,CAAA;AAEA,YAAA,OAAA,GAAA,cAAA;AACA,YAAA,QAAA,GAAA,gBAAA,IAAA,IAAA,GAAA,OAAA,EAAA;AACA,YAAA,eAAA,GAAA,eAAA,CAAA,kBAAA,CAAA,QAAA,CAAA;AACA,QAAA,eAAA,CAAA,MAAA,CAAA,KAAA,aAAA,EAAA,OAAA,CAAA,MAAA;AACA,OA1BA,MA0BA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,qBAAA;AACA;AACA;AA3CA,GAHA;AAgDA,EAAA,IAhDA,kBAgDA;AACA,WAAA;AACA,MAAA,aAAA,EAAA,EADA;AAEA,MAAA,kBAAA,EAAA,EAFA;AAGA,MAAA,OAAA,EAAA,EAHA;AAIA,MAAA,OAAA,EAAA;AAJA,KAAA;AAMA;AAvDA,CAAA","sourcesContent":["<template>\n    <v-card\n        class=\"pa-2\"\n        tile\n        shaped\n        style=\"height: 650px; background-color:#F0F8FF; text-align:center;\"\n    >\n    <v-card-title\n    class=\"headline\" style=\"display: inline-block;\">\n        Network Input Parser\n    </v-card-title>\n    <!-- <v-file-input show-size label=\"Choose Network File\"></v-file-input> -->\n\n    <div style=\"font-size:20px\">\n        Parameters\n       <div>\n            <b-form-input v-model=\"text\" placeholder=\"Enter your name\"></b-form-input>\n            <div class=\"mt-2\">Value: {{ text }}</div>\n        </div>\n    </div>\n\n\n    <div class=\"container\" style=\"font-size:20px\">\n        Network Structure XML\n        <div class=\"large-12 medium-12 small-12 cell file_upload\" style=\"font-size:14px\">\n            <input type=\"file\" id=\"file1\" ref=\"file1\" v-on:change=\"handleFileUpload1()\" />\n            <!-- <label for=\"file1\" ><span>Choose a file&hellip;</span></label> -->\n        </div>\n    </div>\n\n     <div class=\"container\" style=\"font-size:20px\">\n        Virtual Network XML\n        <div class=\"large-12 medium-12 small-12 cell file_upload\" style=\"font-size:14px\">\n            <input type=\"file\" id=\"file2\" ref=\"file2\" v-on:change=\"handleFileUpload2()\"/>\n            <!-- <label for=\"file2\"><span>Choose a file&hellip;</span></label> -->\n        </div>\n    </div>\n\n\n    <button class='network_form' v-on:click=\"submitFile()\">Submit</button>\n\n\n    <!-- <simulation-panel/> -->\n    </v-card>\n</template>\n\n\n<script>\nconst { BlobServiceClient } = require(\"@azure/storage-blob\");\n\nexport default {\n    name: 'NetworkParser',\n\n    methods : {\n        handleFileUpload1() { // File Handling for Network Structure File\n            this.structureFile = this.$refs.file1.files[0];\n            const fileName = this.$refs.file1.files[0].name;\n            console.log(fileName);\n\n        },\n\n        handleFileUpload2() { // File Handling for Virtual Network File\n            this.virtualNetworkFile = this.$refs.file2.files[0];\n            console.log(this.$refs.file2.files.length);\n        },\n\n        submitFile() {\n            if (this.structureFile) {\n                console.log(\"found file\");\n\n                let formData = new FormData();\n                // object of key value pair\n                formData.append('file', this.structureFile);\n\n\n                /*\n                    Make the request to the POST /single-file URL\n                */\n\n                // Enter your storage account name and shared key\n                const account = \"siminoutdb\";\n                const sas = \"se=2021-05-21&sp=rwdlac&sv=2018-03-28&ss=b&srt=sco&sig=YpAmPl9%2BJEZsTAecambIl4UYSwQqI9haA/3LFQyyQzo%3D\";\n                \n                const blobServiceClient = new BlobServiceClient(\n                    `https://${account}.blob.core.windows.net?${sas}`\n                );\n\n                const containerClient = blobServiceClient.getContainerClient('inputdb');\n\n                const content = \"Hello world!\";\n                const blobName = \"networkfile\" + new Date().getTime();\n                const blockBlobClient = containerClient.getBlockBlobClient(blobName);\n                blockBlobClient.upload(this.structureFile, content.length);\n            } else {\n                console.log(\"there are no files.\");\n            }\n        }\n    },\n    data() {\n        return {\n            structureFile : '',\n            virtualNetworkFile: '',\n            reqName: '',\n            reqTime: ''\n        }\n    }\n}\n</script>"],"sourceRoot":"src/components"}]}
=======
{"remainingRequest":"/Users/jeong7331/projects/GooktoWebFront/node_modules/babel-loader/lib/index.js!/Users/jeong7331/projects/GooktoWebFront/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/jeong7331/projects/GooktoWebFront/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jeong7331/projects/GooktoWebFront/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jeong7331/projects/GooktoWebFront/src/components/NetworkParser.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jeong7331/projects/GooktoWebFront/src/components/NetworkParser.vue","mtime":1590126453693},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFNpbXVsYXRpb25QYW5lbCBmcm9tICcuL1NpbXVsYXRpb25QYW5lbC52dWUnOwoKdmFyIF9yZXF1aXJlID0gcmVxdWlyZSgiQGF6dXJlL3N0b3JhZ2UtYmxvYiIpLAogICAgQmxvYlNlcnZpY2VDbGllbnQgPSBfcmVxdWlyZS5CbG9iU2VydmljZUNsaWVudDsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnTmV0d29ya1BhcnNlcicsCiAgY29tcG9uZW50czogewogICAgU2ltdWxhdGlvblBhbmVsOiBTaW11bGF0aW9uUGFuZWwKICB9LAogIG1ldGhvZHM6IHsKICAgIGhhbmRsZUZpbGVVcGxvYWQ6IGZ1bmN0aW9uIGhhbmRsZUZpbGVVcGxvYWQoKSB7CiAgICAgIHRoaXMuZmlsZSA9IHRoaXMuJHJlZnMuZmlsZS5maWxlc1swXTsKICAgIH0sCiAgICBzdWJtaXRGaWxlOiBmdW5jdGlvbiBzdWJtaXRGaWxlKCkgewogICAgICBpZiAodGhpcy5maWxlKSB7CiAgICAgICAgY29uc29sZS5sb2coImZvdW5kIGZpbGUiKTsKICAgICAgICB2YXIgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTsgLy8gb2JqZWN0IG9mIGtleSB2YWx1ZSBwYWlyCgogICAgICAgIGZvcm1EYXRhLmFwcGVuZCgnZmlsZScsIHRoaXMuZmlsZSk7CiAgICAgICAgLyoKICAgICAgICAgICAgTWFrZSB0aGUgcmVxdWVzdCB0byB0aGUgUE9TVCAvc2luZ2xlLWZpbGUgVVJMCiAgICAgICAgKi8KICAgICAgICAvLyBFbnRlciB5b3VyIHN0b3JhZ2UgYWNjb3VudCBuYW1lIGFuZCBzaGFyZWQga2V5CgogICAgICAgIHZhciBhY2NvdW50ID0gInNpbWlub3V0ZGIiOwogICAgICAgIHZhciBzYXMgPSAic2U9MjAyMS0wNS0yMSZzcD1yd2RsYWMmc3Y9MjAxOC0wMy0yOCZzcz1iJnNydD1zY28mc2lnPVlwQW1QbDklMkJKRVpzVEFlY2FtYklsNFVZU3dRcUk5aGFBLzNMRlF5eVF6byUzRCI7CiAgICAgICAgdmFyIGJsb2JTZXJ2aWNlQ2xpZW50ID0gbmV3IEJsb2JTZXJ2aWNlQ2xpZW50KCJodHRwczovLyIuY29uY2F0KGFjY291bnQsICIuYmxvYi5jb3JlLndpbmRvd3MubmV0PyIpLmNvbmNhdChzYXMpKTsKICAgICAgICB2YXIgY29udGFpbmVyQ2xpZW50ID0gYmxvYlNlcnZpY2VDbGllbnQuZ2V0Q29udGFpbmVyQ2xpZW50KCdpbnB1dGRiJyk7CiAgICAgICAgdmFyIGNvbnRlbnQgPSAiSGVsbG8gd29ybGQhIjsKICAgICAgICB2YXIgYmxvYk5hbWUgPSAibmV0d29ya2ZpbGUiICsgbmV3IERhdGUoKS5nZXRUaW1lKCk7CiAgICAgICAgdmFyIGJsb2NrQmxvYkNsaWVudCA9IGNvbnRhaW5lckNsaWVudC5nZXRCbG9ja0Jsb2JDbGllbnQoYmxvYk5hbWUpOwogICAgICAgIGJsb2NrQmxvYkNsaWVudC51cGxvYWQodGhpcy5maWxlLCBjb250ZW50Lmxlbmd0aCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgY29uc29sZS5sb2coInRoZXJlIGFyZSBubyBmaWxlcy4iKTsKICAgICAgfQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZpbGU6ICcnCiAgICB9OwogIH0KfTs="},{"version":3,"sources":["NetworkParser.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,OAAA,eAAA,MAAA,uBAAA;;eACA,OAAA,CAAA,qBAAA,C;IAAA,iB,YAAA,iB;;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,eAAA,EAAA;AADA,GAFA;AAKA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,8BACA;AACA,WAAA,IAAA,GAAA,KAAA,KAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,KAHA;AAIA,IAAA,UAJA,wBAIA;AACA,UAAA,KAAA,IAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,YAAA;AAEA,YAAA,QAAA,GAAA,IAAA,QAAA,EAAA,CAHA,CAIA;;AACA,QAAA,QAAA,CAAA,MAAA,CAAA,MAAA,EAAA,KAAA,IAAA;AAGA;;;AAIA;;AACA,YAAA,OAAA,GAAA,YAAA;AACA,YAAA,GAAA,GAAA,yGAAA;AAEA,YAAA,iBAAA,GAAA,IAAA,iBAAA,mBACA,OADA,oCACA,GADA,EAAA;AAIA,YAAA,eAAA,GAAA,iBAAA,CAAA,kBAAA,CAAA,SAAA,CAAA;AAEA,YAAA,OAAA,GAAA,cAAA;AACA,YAAA,QAAA,GAAA,gBAAA,IAAA,IAAA,GAAA,OAAA,EAAA;AACA,YAAA,eAAA,GAAA,eAAA,CAAA,kBAAA,CAAA,QAAA,CAAA;AACA,QAAA,eAAA,CAAA,MAAA,CAAA,KAAA,IAAA,EAAA,OAAA,CAAA,MAAA;AACA,OA1BA,MA0BA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,qBAAA;AACA;AACA;AAlCA,GALA;AAyCA,EAAA,IAzCA,kBAyCA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AADA,KAAA;AAGA;AA7CA,CAAA","sourcesContent":["<template>\n    <v-card\n        class=\"pa-2\"\n        tile\n        shaped\n        style=\"height: 650px; background-color:#F0F8FF;\"\n    >\n    <v-card-title\n    class=\"headline\">\n        Network Input Parser UPDATED !\n    </v-card-title>\n    <v-file-input show-size label=\"Choose Network File\"></v-file-input>\n\n\n    <div class=\"container\">\n        <div class=\"large-12 medium-12 small-12 cell\">\n        <label>File\n            <input type=\"file\" id=\"file\" ref=\"file\" v-on:change=\"handleFileUpload()\"/>\n        </label>\n            <button v-on:click=\"submitFile()\">Submit</button>\n        </div>\n    </div>\n\n    <simulation-panel/>\n    </v-card>\n</template>\n\n\n<script>\nimport SimulationPanel from './SimulationPanel.vue'\nconst { BlobServiceClient } = require(\"@azure/storage-blob\");\n\nexport default {\n    name: 'NetworkParser',\n    components: {\n        SimulationPanel\n    },\n    methods : {\n        handleFileUpload() {\n            this.file = this.$refs.file.files[0];\n        },\n        submitFile() {\n            if (this.file) {\n                console.log(\"found file\");\n\n                let formData = new FormData();\n                // object of key value pair\n                formData.append('file', this.file);\n\n\n                /*\n                    Make the request to the POST /single-file URL\n                */\n\n                // Enter your storage account name and shared key\n                const account = \"siminoutdb\";\n                const sas = \"se=2021-05-21&sp=rwdlac&sv=2018-03-28&ss=b&srt=sco&sig=YpAmPl9%2BJEZsTAecambIl4UYSwQqI9haA/3LFQyyQzo%3D\";\n                \n                const blobServiceClient = new BlobServiceClient(\n                    `https://${account}.blob.core.windows.net?${sas}`\n                );\n\n                const containerClient = blobServiceClient.getContainerClient('inputdb');\n\n                const content = \"Hello world!\";\n                const blobName = \"networkfile\" + new Date().getTime();\n                const blockBlobClient = containerClient.getBlockBlobClient(blobName);\n                blockBlobClient.upload(this.file, content.length);\n            } else {\n                console.log(\"there are no files.\");\n            }\n        }\n    },\n    data() {\n        return {\n            file : ''\n        }\n    }\n}\n</script>"],"sourceRoot":"src/components"}]}
>>>>>>> origin/master
