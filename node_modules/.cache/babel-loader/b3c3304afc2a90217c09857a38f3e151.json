{"remainingRequest":"/Users/jeong7331/projects/GooktoWebFront/node_modules/babel-loader/lib/index.js!/Users/jeong7331/projects/GooktoWebFront/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/jeong7331/projects/GooktoWebFront/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jeong7331/projects/GooktoWebFront/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jeong7331/projects/GooktoWebFront/src/components/NetworkParser.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jeong7331/projects/GooktoWebFront/src/components/NetworkParser.vue","mtime":1590119310950},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFNpbXVsYXRpb25QYW5lbCBmcm9tICcuL1NpbXVsYXRpb25QYW5lbC52dWUnOyAvL2ltcG9ydCBheGlvcyBmcm9tICdheGlvcycKLy9pbXBvcnQgYmxvYlVwbG9hZCBmcm9tICcuLi91dGlscy9ibG9iX3VwbG9hZC5qcycKCnZhciBfcmVxdWlyZSA9IHJlcXVpcmUoIkBhenVyZS9zdG9yYWdlLWJsb2IiKSwKICAgIEJsb2JTZXJ2aWNlQ2xpZW50ID0gX3JlcXVpcmUuQmxvYlNlcnZpY2VDbGllbnQ7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ05ldHdvcmtQYXJzZXInLAogIGNvbXBvbmVudHM6IHsKICAgIFNpbXVsYXRpb25QYW5lbDogU2ltdWxhdGlvblBhbmVsCiAgfSwKICBtZXRob2RzOiB7CiAgICBoYW5kbGVGaWxlVXBsb2FkOiBmdW5jdGlvbiBoYW5kbGVGaWxlVXBsb2FkKCkgewogICAgICB0aGlzLmZpbGUgPSB0aGlzLiRyZWZzLmZpbGUuZmlsZXNbMF07CiAgICB9LAogICAgc3VibWl0RmlsZTogZnVuY3Rpb24gc3VibWl0RmlsZSgpIHsKICAgICAgaWYgKHRoaXMuZmlsZSkgewogICAgICAgIGNvbnNvbGUubG9nKCJmb3VuZCBmaWxlIik7CiAgICAgICAgdmFyIGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7IC8vIG9iamVjdCBvZiBrZXkgdmFsdWUgcGFpcgoKICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ2ZpbGUnLCB0aGlzLmZpbGUpOwogICAgICAgIC8qCiAgICAgICAgICAgIE1ha2UgdGhlIHJlcXVlc3QgdG8gdGhlIFBPU1QgL3NpbmdsZS1maWxlIFVSTAogICAgICAgICovCiAgICAgICAgLy8gRW50ZXIgeW91ciBzdG9yYWdlIGFjY291bnQgbmFtZSBhbmQgc2hhcmVkIGtleQoKICAgICAgICB2YXIgYWNjb3VudCA9ICJzaW1pbm91dGRiIjsKICAgICAgICB2YXIgc2FzID0gInNlPTIwMjEtMDUtMjEmc3A9cndkbGFjJnN2PTIwMTgtMDMtMjgmc3M9YiZzcnQ9c2NvJnNpZz1ZcEFtUGw5JTJCSkVac1RBZWNhbWJJbDRVWVN3UXFJOWhhQS8zTEZReXlRem8lM0QiOwogICAgICAgIHZhciBibG9iU2VydmljZUNsaWVudCA9IG5ldyBCbG9iU2VydmljZUNsaWVudCgiaHR0cHM6Ly8iLmNvbmNhdChhY2NvdW50LCAiLmJsb2IuY29yZS53aW5kb3dzLm5ldD8iKS5jb25jYXQoc2FzKSk7CiAgICAgICAgdmFyIGNvbnRhaW5lckNsaWVudCA9IGJsb2JTZXJ2aWNlQ2xpZW50LmdldENvbnRhaW5lckNsaWVudCgnaW5wdXRkYicpOwogICAgICAgIHZhciBjb250ZW50ID0gIkhlbGxvIHdvcmxkISI7CiAgICAgICAgdmFyIGJsb2JOYW1lID0gIm5ldHdvcmtmaWxlIiArIG5ldyBEYXRlKCkuZ2V0VGltZSgpOwogICAgICAgIHZhciBibG9ja0Jsb2JDbGllbnQgPSBjb250YWluZXJDbGllbnQuZ2V0QmxvY2tCbG9iQ2xpZW50KGJsb2JOYW1lKTsKICAgICAgICBibG9ja0Jsb2JDbGllbnQudXBsb2FkKHRoaXMuZmlsZSwgY29udGVudC5sZW5ndGgpOwogICAgICB9IGVsc2UgewogICAgICAgIGNvbnNvbGUubG9nKCJ0aGVyZSBhcmUgbm8gZmlsZXMuIik7CiAgICAgIH0KICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmaWxlOiAnJwogICAgfTsKICB9Cn07"},{"version":3,"sources":["NetworkParser.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,OAAA,eAAA,MAAA,uBAAA,C,CACA;AACA;;eACA,OAAA,CAAA,qBAAA,C;IAAA,iB,YAAA,iB;;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,eAAA,EAAA;AADA,GAFA;AAKA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,8BACA;AACA,WAAA,IAAA,GAAA,KAAA,KAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,KAHA;AAIA,IAAA,UAJA,wBAIA;AACA,UAAA,KAAA,IAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,YAAA;AAEA,YAAA,QAAA,GAAA,IAAA,QAAA,EAAA,CAHA,CAIA;;AACA,QAAA,QAAA,CAAA,MAAA,CAAA,MAAA,EAAA,KAAA,IAAA;AAGA;;;AAIA;;AACA,YAAA,OAAA,GAAA,YAAA;AACA,YAAA,GAAA,GAAA,yGAAA;AAEA,YAAA,iBAAA,GAAA,IAAA,iBAAA,mBACA,OADA,oCACA,GADA,EAAA;AAIA,YAAA,eAAA,GAAA,iBAAA,CAAA,kBAAA,CAAA,SAAA,CAAA;AAEA,YAAA,OAAA,GAAA,cAAA;AACA,YAAA,QAAA,GAAA,gBAAA,IAAA,IAAA,GAAA,OAAA,EAAA;AACA,YAAA,eAAA,GAAA,eAAA,CAAA,kBAAA,CAAA,QAAA,CAAA;AACA,QAAA,eAAA,CAAA,MAAA,CAAA,KAAA,IAAA,EAAA,OAAA,CAAA,MAAA;AACA,OA1BA,MA0BA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,qBAAA;AACA;AACA;AAlCA,GALA;AAyCA,EAAA,IAzCA,kBAyCA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AADA,KAAA;AAGA;AA7CA,CAAA","sourcesContent":["<template>\n    <v-card\n        class=\"pa-2\"\n        tile\n        shaped\n        style=\"height: 650px; background-color:#F0F8FF;\"\n    >\n    <v-card-title\n    class=\"headline\">\n        Network Input Parser  \n    </v-card-title>\n    <v-file-input show-size label=\"Choose Network File\"></v-file-input>\n\n\n    <div class=\"container\">\n        <div class=\"large-12 medium-12 small-12 cell\">\n        <label>File\n            <input type=\"file\" id=\"file\" ref=\"file\" v-on:change=\"handleFileUpload()\"/>\n        </label>\n            <button v-on:click=\"submitFile()\">Submit</button>\n        </div>\n    </div>\n\n    <simulation-panel/>\n    </v-card>\n</template>\n\n\n<script>\nimport SimulationPanel from './SimulationPanel.vue'\n//import axios from 'axios'\n//import blobUpload from '../utils/blob_upload.js'\nconst { BlobServiceClient } = require(\"@azure/storage-blob\");\n\nexport default {\n    name: 'NetworkParser',\n    components: {\n        SimulationPanel\n    },\n    methods : {\n        handleFileUpload() {\n            this.file = this.$refs.file.files[0];\n        },\n        submitFile() {\n            if (this.file) {\n                console.log(\"found file\");\n\n                let formData = new FormData();\n                // object of key value pair\n                formData.append('file', this.file);\n\n\n                /*\n                    Make the request to the POST /single-file URL\n                */\n\n                // Enter your storage account name and shared key\n                const account = \"siminoutdb\";\n                const sas = \"se=2021-05-21&sp=rwdlac&sv=2018-03-28&ss=b&srt=sco&sig=YpAmPl9%2BJEZsTAecambIl4UYSwQqI9haA/3LFQyyQzo%3D\";\n                \n                const blobServiceClient = new BlobServiceClient(\n                    `https://${account}.blob.core.windows.net?${sas}`\n                );\n\n                const containerClient = blobServiceClient.getContainerClient('inputdb');\n\n                const content = \"Hello world!\";\n                const blobName = \"networkfile\" + new Date().getTime();\n                const blockBlobClient = containerClient.getBlockBlobClient(blobName);\n                blockBlobClient.upload(this.file, content.length);\n            } else {\n                console.log(\"there are no files.\");\n            }\n        }\n    },\n    data() {\n        return {\n            file : ''\n        }\n    }\n}\n</script>"],"sourceRoot":"src/components"}]}