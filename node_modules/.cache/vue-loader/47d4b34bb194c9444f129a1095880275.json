{"remainingRequest":"/Users/jeong7331/projects/GooktoWebFront/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jeong7331/projects/GooktoWebFront/src/components/NetworkParser.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jeong7331/projects/GooktoWebFront/src/components/NetworkParser.vue","mtime":1590114156149},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBTaW11bGF0aW9uUGFuZWwgZnJvbSAnLi9TaW11bGF0aW9uUGFuZWwudnVlJwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnCmltcG9ydCBibG9iVXBsb2FkIGZyb20gJy4uL3V0aWxzL2Jsb2JfdXBsb2FkLmpzJwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ05ldHdvcmtQYXJzZXInLAogICAgY29tcG9uZW50czogewogICAgICAgIFNpbXVsYXRpb25QYW5lbAogICAgfSwKICAgIG1ldGhvZHMgOiB7CiAgICAgICAgaGFuZGxlRmlsZVVwbG9hZCgpIHsKICAgICAgICAgICAgdGhpcy5maWxlID0gdGhpcy4kcmVmcy5maWxlLmZpbGVzWzBdOwogICAgICAgIH0sCiAgICAgICAgc3VibWl0RmlsZSgpIHsKICAgICAgICAgICAgaWYgKHRoaXMuZmlsZSkgewogICAgICAgICAgICAgICAgY29uc29sZS5sb2coImZvdW5kIGZpbGUiKTsKCiAgICAgICAgICAgICAgICBsZXQgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTsKICAgICAgICAgICAgICAgIC8vIG9iamVjdCBvZiBrZXkgdmFsdWUgcGFpcgogICAgICAgICAgICAgICAgZm9ybURhdGEuYXBwZW5kKCdmaWxlJywgdGhpcy5maWxlKTsKCgogICAgICAgICAgICAgICAgLy9maWxlIGZvcm1hdCBjb25maWd1cmF0aW9ucyBjYW4gYmUgbWFkZSBoZXJlCiAgICAgICAgICAgICAgICBsZXQgYXhpb3NDb25maWcgPSB7CiAgICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ3RleHQvcGxhaW4nLAogICAgICAgICAgICAgICAgICAgICAgICAnQWNjZXB0JzogJyonLAogICAgICAgICAgICAgICAgICAgICAgICAiQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luIiA6ICIqIiwKICAgICAgICAgICAgICAgICAgICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHMnOiAnR0VULCBQT1NULCBQQVRDSCwgUFVULCBERUxFVEUsIE9QVElPTlMnLAogICAgICAgICAgICAgICAgICAgICAgICAiQWNjZXNzLUNvbnRyb2wtQWxsb3ctSGVhZGVycyI6ICIqIiwKICAgICAgICAgICAgICAgICAgICAgICAgIkFjY2Vzcy1Db250cm9sLUFsbG93LUNyZWRlbnRpYWxzIiA6IHRydWUKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9OwoKICAgICAgICAgICAgICAgIC8qCiAgICAgICAgICAgICAgICAgICAgTWFrZSB0aGUgcmVxdWVzdCB0byB0aGUgUE9TVCAvc2luZ2xlLWZpbGUgVVJMCiAgICAgICAgICAgICAgICAqLwoKICAgICAgICAgICAgICAgYmxvYlVwbG9hZCgpOwoKICAgICAgICAgICAgICAgIC8vIGh0dHBzOi8vc2ltaW5vdXRkYi5ibG9iLmNvcmUud2luZG93cy5uZXQvaW5wdXRkYgogICAgICAgICAgICAgICAgYXhpb3MucHV0KCAnaHR0cHM6Ly9zaW1pbm91dGRiLmJsb2IuY29yZS53aW5kb3dzLm5ldC9pbnB1dGRiJywKICAgICAgICAgICAgICAgICAgICBmb3JtRGF0YSwgYXhpb3NDb25maWcKICAgICAgICAgICAgICAgICkudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coIlN1Y2Nlc3MhIik7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coeyByZXNwb25zZSB9KTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICkuY2F0Y2goZXJyb3IgPT4gewogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHsgZXJyb3IgfSk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJ0aGVyZSBhcmUgbm8gZmlsZXMuIik7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9LAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBmaWxlIDogJycKICAgICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["NetworkParser.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"NetworkParser.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <v-card\n        class=\"pa-2\"\n        tile\n        shaped\n        style=\"height: 650px; background-color:#F0F8FF;\"\n    >\n    <v-card-title\n    class=\"headline\">\n        Network Input Parser  \n    </v-card-title>\n    <v-file-input show-size label=\"Choose Network File\"></v-file-input>\n\n\n    <div class=\"container\">\n        <div class=\"large-12 medium-12 small-12 cell\">\n        <label>File\n            <input type=\"file\" id=\"file\" ref=\"file\" v-on:change=\"handleFileUpload()\"/>\n        </label>\n            <button v-on:click=\"submitFile()\">Submit</button>\n        </div>\n    </div>\n\n    <simulation-panel/>\n    </v-card>\n</template>\n\n\n<script>\nimport SimulationPanel from './SimulationPanel.vue'\nimport axios from 'axios'\nimport blobUpload from '../utils/blob_upload.js'\n\nexport default {\n    name: 'NetworkParser',\n    components: {\n        SimulationPanel\n    },\n    methods : {\n        handleFileUpload() {\n            this.file = this.$refs.file.files[0];\n        },\n        submitFile() {\n            if (this.file) {\n                console.log(\"found file\");\n\n                let formData = new FormData();\n                // object of key value pair\n                formData.append('file', this.file);\n\n\n                //file format configurations can be made here\n                let axiosConfig = {\n                    headers: {\n                        'Content-Type': 'text/plain',\n                        'Accept': '*',\n                        \"Access-Control-Allow-Origin\" : \"*\",\n                        'Access-Control-Allow-Methods': 'GET, POST, PATCH, PUT, DELETE, OPTIONS',\n                        \"Access-Control-Allow-Headers\": \"*\",\n                        \"Access-Control-Allow-Credentials\" : true\n                    }\n                };\n\n                /*\n                    Make the request to the POST /single-file URL\n                */\n\n               blobUpload();\n\n                // https://siminoutdb.blob.core.windows.net/inputdb\n                axios.put( 'https://siminoutdb.blob.core.windows.net/inputdb',\n                    formData, axiosConfig\n                ).then(response => {\n                    console.log(\"Success!\");\n                    console.log({ response });\n                }\n                ).catch(error => {\n                    console.log({ error });\n                });\n            } else {\n                console.log(\"there are no files.\");\n            }\n        }\n    },\n    data() {\n        return {\n            file : ''\n        }\n    }\n}\n</script>"]}]}