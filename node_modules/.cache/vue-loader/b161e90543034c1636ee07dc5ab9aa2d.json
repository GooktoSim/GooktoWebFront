{"remainingRequest":"/Users/jeong7331/projects/GooktoWebFront/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jeong7331/projects/GooktoWebFront/src/components/NetworkParser.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jeong7331/projects/GooktoWebFront/src/components/NetworkParser.vue","mtime":1590119310950},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeong7331/projects/GooktoWebFront/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBTaW11bGF0aW9uUGFuZWwgZnJvbSAnLi9TaW11bGF0aW9uUGFuZWwudnVlJwovL2ltcG9ydCBheGlvcyBmcm9tICdheGlvcycKLy9pbXBvcnQgYmxvYlVwbG9hZCBmcm9tICcuLi91dGlscy9ibG9iX3VwbG9hZC5qcycKY29uc3QgeyBCbG9iU2VydmljZUNsaWVudCB9ID0gcmVxdWlyZSgiQGF6dXJlL3N0b3JhZ2UtYmxvYiIpOwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ05ldHdvcmtQYXJzZXInLAogICAgY29tcG9uZW50czogewogICAgICAgIFNpbXVsYXRpb25QYW5lbAogICAgfSwKICAgIG1ldGhvZHMgOiB7CiAgICAgICAgaGFuZGxlRmlsZVVwbG9hZCgpIHsKICAgICAgICAgICAgdGhpcy5maWxlID0gdGhpcy4kcmVmcy5maWxlLmZpbGVzWzBdOwogICAgICAgIH0sCiAgICAgICAgc3VibWl0RmlsZSgpIHsKICAgICAgICAgICAgaWYgKHRoaXMuZmlsZSkgewogICAgICAgICAgICAgICAgY29uc29sZS5sb2coImZvdW5kIGZpbGUiKTsKCiAgICAgICAgICAgICAgICBsZXQgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTsKICAgICAgICAgICAgICAgIC8vIG9iamVjdCBvZiBrZXkgdmFsdWUgcGFpcgogICAgICAgICAgICAgICAgZm9ybURhdGEuYXBwZW5kKCdmaWxlJywgdGhpcy5maWxlKTsKCgogICAgICAgICAgICAgICAgLyoKICAgICAgICAgICAgICAgICAgICBNYWtlIHRoZSByZXF1ZXN0IHRvIHRoZSBQT1NUIC9zaW5nbGUtZmlsZSBVUkwKICAgICAgICAgICAgICAgICovCgogICAgICAgICAgICAgICAgLy8gRW50ZXIgeW91ciBzdG9yYWdlIGFjY291bnQgbmFtZSBhbmQgc2hhcmVkIGtleQogICAgICAgICAgICAgICAgY29uc3QgYWNjb3VudCA9ICJzaW1pbm91dGRiIjsKICAgICAgICAgICAgICAgIGNvbnN0IHNhcyA9ICJzZT0yMDIxLTA1LTIxJnNwPXJ3ZGxhYyZzdj0yMDE4LTAzLTI4JnNzPWImc3J0PXNjbyZzaWc9WXBBbVBsOSUyQkpFWnNUQWVjYW1iSWw0VVlTd1FxSTloYUEvM0xGUXl5UXpvJTNEIjsKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgY29uc3QgYmxvYlNlcnZpY2VDbGllbnQgPSBuZXcgQmxvYlNlcnZpY2VDbGllbnQoCiAgICAgICAgICAgICAgICAgICAgYGh0dHBzOi8vJHthY2NvdW50fS5ibG9iLmNvcmUud2luZG93cy5uZXQ/JHtzYXN9YAogICAgICAgICAgICAgICAgKTsKCiAgICAgICAgICAgICAgICBjb25zdCBjb250YWluZXJDbGllbnQgPSBibG9iU2VydmljZUNsaWVudC5nZXRDb250YWluZXJDbGllbnQoJ2lucHV0ZGInKTsKCiAgICAgICAgICAgICAgICBjb25zdCBjb250ZW50ID0gIkhlbGxvIHdvcmxkISI7CiAgICAgICAgICAgICAgICBjb25zdCBibG9iTmFtZSA9ICJuZXR3b3JrZmlsZSIgKyBuZXcgRGF0ZSgpLmdldFRpbWUoKTsKICAgICAgICAgICAgICAgIGNvbnN0IGJsb2NrQmxvYkNsaWVudCA9IGNvbnRhaW5lckNsaWVudC5nZXRCbG9ja0Jsb2JDbGllbnQoYmxvYk5hbWUpOwogICAgICAgICAgICAgICAgYmxvY2tCbG9iQ2xpZW50LnVwbG9hZCh0aGlzLmZpbGUsIGNvbnRlbnQubGVuZ3RoKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJ0aGVyZSBhcmUgbm8gZmlsZXMuIik7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9LAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBmaWxlIDogJycKICAgICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["NetworkParser.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"NetworkParser.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <v-card\n        class=\"pa-2\"\n        tile\n        shaped\n        style=\"height: 650px; background-color:#F0F8FF;\"\n    >\n    <v-card-title\n    class=\"headline\">\n        Network Input Parser  \n    </v-card-title>\n    <v-file-input show-size label=\"Choose Network File\"></v-file-input>\n\n\n    <div class=\"container\">\n        <div class=\"large-12 medium-12 small-12 cell\">\n        <label>File\n            <input type=\"file\" id=\"file\" ref=\"file\" v-on:change=\"handleFileUpload()\"/>\n        </label>\n            <button v-on:click=\"submitFile()\">Submit</button>\n        </div>\n    </div>\n\n    <simulation-panel/>\n    </v-card>\n</template>\n\n\n<script>\nimport SimulationPanel from './SimulationPanel.vue'\n//import axios from 'axios'\n//import blobUpload from '../utils/blob_upload.js'\nconst { BlobServiceClient } = require(\"@azure/storage-blob\");\n\nexport default {\n    name: 'NetworkParser',\n    components: {\n        SimulationPanel\n    },\n    methods : {\n        handleFileUpload() {\n            this.file = this.$refs.file.files[0];\n        },\n        submitFile() {\n            if (this.file) {\n                console.log(\"found file\");\n\n                let formData = new FormData();\n                // object of key value pair\n                formData.append('file', this.file);\n\n\n                /*\n                    Make the request to the POST /single-file URL\n                */\n\n                // Enter your storage account name and shared key\n                const account = \"siminoutdb\";\n                const sas = \"se=2021-05-21&sp=rwdlac&sv=2018-03-28&ss=b&srt=sco&sig=YpAmPl9%2BJEZsTAecambIl4UYSwQqI9haA/3LFQyyQzo%3D\";\n                \n                const blobServiceClient = new BlobServiceClient(\n                    `https://${account}.blob.core.windows.net?${sas}`\n                );\n\n                const containerClient = blobServiceClient.getContainerClient('inputdb');\n\n                const content = \"Hello world!\";\n                const blobName = \"networkfile\" + new Date().getTime();\n                const blockBlobClient = containerClient.getBlockBlobClient(blobName);\n                blockBlobClient.upload(this.file, content.length);\n            } else {\n                console.log(\"there are no files.\");\n            }\n        }\n    },\n    data() {\n        return {\n            file : ''\n        }\n    }\n}\n</script>"]}]}